{
    "openapi": "3.0.3",
    "info": {
        "title": "Veil API Platform",
        "description": "API specification for Veil API marketplace platform services",
        "version": "1.0.0",
        "contact": {
            "email": "admin@veil.platform"
        }
    },
    "servers": [
        {
            "url": "https://api.veil.platform/v1",
            "description": "Production server"
        },
        {
            "url": "https://staging-api.veil.platform/v1",
            "description": "Staging server"
        }
    ],
    "tags": [
        {
            "name": "onboarding",
            "description": "API Provider Onboarding"
        },
        {
            "name": "subscription",
            "description": "API Subscription Management"
        },
        {
            "name": "credit-management",
            "description": "Credit Management BFF"
        },
        {
            "name": "credit-service",
            "description": "Internal Credit Service"
        },
        {
            "name": "gateway",
            "description": "Gateway Configuration"
        }
    ],
    "paths": {
        "/routes": {
            "put": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Register a new API",
                "description": "Provider API registration endpoint",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiRegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "API successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiRegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "409": {
                        "description": "API with same path already exists",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/{api_id}": {
            "get": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Get API details",
                "description": "Retrieve details about a registered API",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "API details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiDetailsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "patch": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Update API details",
                "description": "Update an existing API's details",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiDetailsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "onboarding"
                ],
                "summary": "Delete API",
                "description": "Remove an API from the platform",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "API deleted successfully"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/subscribe": {
            "post": {
                "tags": [
                    "subscription"
                ],
                "summary": "Subscribe to API",
                "description": "Create a subscription to an API and generate an API key",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubscriptionRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subscription created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "409": {
                        "description": "Already subscribed to this API",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "tags": [
                    "subscription"
                ],
                "summary": "List subscriptions",
                "description": "List all subscriptions for the authenticated consumer",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by subscription status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "ACTIVE",
                                "INACTIVE",
                                "CANCELLED"
                            ]
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subscriptions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionListResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/subscription/{subscription_id}": {
            "get": {
                "tags": [
                    "subscription"
                ],
                "summary": "Get subscription details",
                "description": "Get detailed information about a specific subscription",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subscription_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionDetailsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "delete": {
                "tags": [
                    "subscription"
                ],
                "summary": "Cancel subscription",
                "description": "Cancel an active subscription",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subscription_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription cancelled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SubscriptionCancellationResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/subscription/{subscription_id}/regenerate-key": {
            "post": {
                "tags": [
                    "subscription"
                ],
                "summary": "Regenerate API key",
                "description": "Generate a new API key for an existing subscription",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "subscription_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New API key generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegenerateKeyResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/initialize": {
            "post": {
                "tags": [
                    "credit-management"
                ],
                "summary": "Initialize user credits",
                "description": "Initialize a credit wallet for a new user with default credits",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InitializeCreditsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Wallet created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "409": {
                        "description": "Wallet already exists for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/credits": {
            "get": {
                "tags": [
                    "credit-management"
                ],
                "summary": "Get credit balance",
                "description": "Get the current credit balance for a user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credit balance",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditBalanceResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/credits/history": {
            "get": {
                "tags": [
                    "credit-management"
                ],
                "summary": "Get credit history",
                "description": "Get credit usage history for a user",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "from_date",
                        "in": "query",
                        "description": "Start date for history (ISO 8601)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "to_date",
                        "in": "query",
                        "description": "End date for history (ISO 8601)",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Items per page",
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "minimum": 1,
                            "maximum": 100
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credit history",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditHistoryResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/routes": {
            "put": {
                "tags": [
                    "gateway"
                ],
                "summary": "Register API route",
                "description": "Register a new API route configuration",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RouteRegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Route registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RouteRegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/api/keys": {
            "put": {
                "tags": [
                    "gateway"
                ],
                "summary": "Register API key",
                "description": "Register a new API key for subscription validation",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApiKeyRegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "API key registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiKeyRegistrationResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/internal/wallet": {
            "post": {
                "tags": [
                    "credit-service"
                ],
                "summary": "Create wallet",
                "description": "Create a new wallet for a user",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateWalletRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Wallet created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "409": {
                        "description": "Wallet already exists for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/internal/wallet/balance/{walletId}": {
            "get": {
                "tags": [
                    "credit-service"
                ],
                "summary": "Get wallet balance",
                "description": "Get the current balance for a specific wallet",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Wallet balance retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletBalanceResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/internal/wallet/{walletId}/credits/add": {
            "post": {
                "tags": [
                    "credit-service"
                ],
                "summary": "Add credits to wallet",
                "description": "Add credits to a specific wallet",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AddCreditsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Credits added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditTransactionResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/internal/wallet/{walletId}/credits/deduct": {
            "post": {
                "tags": [
                    "credit-service"
                ],
                "summary": "Deduct credits from wallet",
                "description": "Deduct credits from a specific wallet",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DeductCreditsRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Credits deducted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditTransactionResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Insufficient credits",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/internal/wallet/{walletId}/transactions": {
            "get": {
                "tags": [
                    "credit-service"
                ],
                "summary": "Get wallet transactions",
                "description": "Get transaction history for a specific wallet",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "walletId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transactions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WalletTransactionsResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/internal/wallet/check": {
            "get": {
                "tags": [
                    "credit-service"
                ],
                "summary": "Check wallet credits",
                "description": "Check if a wallet has sufficient credits",
                "security": [
                    {
                        "serviceAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "api_key",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "amount",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 0
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Credit check successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreditCheckResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "ApiRegistrationRequest": {
                "type": "object",
                "required": [
                    "name",
                    "path",
                    "method"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "API name"
                    },
                    "path": {
                        "type": "string",
                        "description": "Base path for the API"
                    },
                    "required_headers": {
                        "type": "array",
                        "description": "Headers required by the provider API",
                        "items": {
                            "$ref": "#/components/schemas/RequiredHeader"
                        }
                    },
                    "method": {
                        "type": "string",
                        "description": "HTTP methods supported (comma separated)"
                    },
                    "description": {
                        "type": "string",
                        "description": "API description"
                    },
                    "documentation_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL to API documentation"
                    }
                }
            },
            "ApiRegistrationResponse": {
                "type": "object",
                "properties": {
                    "api_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique ID for the API"
                    },
                    "status": {
                        "type": "string",
                        "description": "Status of registration"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Creation timestamp"
                    }
                }
            },
            "ApiUpdateRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "API name"
                    },
                    "path": {
                        "type": "string",
                        "description": "Base path for the API"
                    },
                    "required_headers": {
                        "type": "array",
                        "description": "Headers required by the provider API",
                        "items": {
                            "$ref": "#/components/schemas/RequiredHeader"
                        }
                    },
                    "method": {
                        "type": "string",
                        "description": "HTTP methods supported (comma separated)"
                    },
                    "description": {
                        "type": "string",
                        "description": "API description"
                    },
                    "documentation_url": {
                        "type": "string",
                        "format": "uri",
                        "description": "URL to API documentation"
                    }
                }
            },
            "ApiDetailsResponse": {
                "type": "object",
                "properties": {
                    "api_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string"
                    },
                    "path": {
                        "type": "string"
                    },
                    "required_headers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RequiredHeader"
                        }
                    },
                    "method": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "documentation_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RequiredHeader": {
                "type": "object",
                "required": [
                    "name",
                    "value",
                    "is_variable"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Header name"
                    },
                    "value": {
                        "type": "string",
                        "description": "Header value"
                    },
                    "is_variable": {
                        "type": "boolean",
                        "description": "Whether value is static or dynamic"
                    }
                }
            },
            "SubscriptionRequest": {
                "type": "object",
                "required": [
                    "api_id"
                ],
                "properties": {
                    "api_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "ID of the API to subscribe to"
                    },
                    "plan_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Optional billing plan ID"
                    },
                    "notes": {
                        "type": "string",
                        "description": "Optional subscription notes"
                    }
                }
            },
            "SubscriptionResponse": {
                "type": "object",
                "properties": {
                    "subscription_id": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Unique subscription ID"
                    },
                    "api_key": {
                        "type": "string",
                        "description": "Generated API key"
                    },
                    "status": {
                        "type": "string",
                        "description": "Subscription status"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "description": "Subscription creation time"
                    }
                }
            },
            "SubscriptionListResponse": {
                "type": "object",
                "properties": {
                    "subscriptions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "subscription_id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "api_id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "api_name": {
                                    "type": "string"
                                },
                                "status": {
                                    "type": "string"
                                },
                                "created_at": {
                                    "type": "string",
                                    "format": "date-time"
                                },
                                "last_used": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "limit": {
                        "type": "integer"
                    }
                }
            },
            "SubscriptionDetailsResponse": {
                "type": "object",
                "properties": {
                    "subscription_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "api_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "api_name": {
                        "type": "string"
                    },
                    "api_key": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    },
                    "plan_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "plan_name": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "last_used": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "usage_stats": {
                        "type": "object",
                        "properties": {
                            "total_calls": {
                                "type": "integer"
                            },
                            "calls_this_period": {
                                "type": "integer"
                            }
                        }
                    }
                }
            },
            "SubscriptionCancellationResponse": {
                "type": "object",
                "properties": {
                    "subscription_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "type": "string"
                    },
                    "cancelled_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "RegenerateKeyResponse": {
                "type": "object",
                "properties": {
                    "subscription_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "api_key": {
                        "type": "string"
                    },
                    "previous_key_invalidated": {
                        "type": "boolean"
                    }
                }
            },
            "InitializeCreditsRequest": {
                "type": "object",
                "properties": {
                    "initial_credits": {
                        "type": "integer",
                        "description": "Initial credit amount (default: 150)"
                    }
                }
            },
            "WalletResponse": {
                "type": "object",
                "properties": {
                    "wallet_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "credit_balance": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreditBalanceResponse": {
                "type": "object",
                "properties": {
                    "wallet_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "credit_balance": {
                        "type": "integer"
                    },
                    "last_updated": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreditHistoryResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "transaction_id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "DEBIT",
                                        "CREDIT"
                                    ]
                                },
                                "amount": {
                                    "type": "integer"
                                },
                                "balance_after": {
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "api_id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "timestamp": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    },
                    "total": {
                        "type": "integer"
                    },
                    "page": {
                        "type": "integer"
                    },
                    "limit": {
                        "type": "integer"
                    }
                }
            },
            "RouteRegistrationRequest": {
                "type": "object",
                "required": [
                    "api_id",
                    "base_path",
                    "target_url",
                    "methods"
                ],
                "properties": {
                    "api_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "base_path": {
                        "type": "string"
                    },
                    "target_url": {
                        "type": "string",
                        "format": "uri"
                    },
                    "methods": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "GET",
                                "POST",
                                "PUT",
                                "PATCH",
                                "DELETE",
                                "OPTIONS",
                                "HEAD"
                            ]
                        }
                    },
                    "required_headers": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "is_static": {
                                    "type": "boolean"
                                }
                            }
                        }
                    },
                    "strip_path_prefix": {
                        "type": "boolean",
                        "default": true
                    },
                    "log_level": {
                        "type": "string",
                        "enum": [
                            "debug",
                            "info",
                            "warn",
                            "error"
                        ]
                    }
                }
            },
            "RouteRegistrationResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "route_id": {
                        "type": "string"
                    }
                }
            },
            "ApiKeyRegistrationRequest": {
                "type": "object",
                "required": [
                    "api_key",
                    "user_id",
                    "api_id"
                ],
                "properties": {
                    "api_key": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "api_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "allowed_paths": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "rate_limit": {
                        "type": "object",
                        "properties": {
                            "requests_per_minute": {
                                "type": "integer",
                                "minimum": 1
                            }
                        }
                    },
                    "metadata": {
                        "type": "object"
                    }
                }
            },
            "ApiKeyRegistrationResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "ErrorResponse": {
                "type": "object",
                "properties": {
                    "error": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateWalletRequest": {
                "type": "object",
                "required": [
                    "userId",
                    "tenantId"
                ],
                "properties": {
                    "userId": {
                        "type": "string",
                        "description": "User's FusionAuth ID"
                    },
                    "tenantId": {
                        "type": "string",
                        "format": "uuid",
                        "description": "Tenant ID"
                    },
                    "initialCredits": {
                        "type": "integer",
                        "description": "Initial credit amount",
                        "default": 0
                    }
                }
            },
            "WalletBalanceResponse": {
                "type": "object",
                "properties": {
                    "walletId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "creditBalance": {
                        "type": "integer"
                    }
                }
            },
            "AddCreditsRequest": {
                "type": "object",
                "required": [
                    "amount",
                    "description"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "minimum": 0
                    },
                    "description": {
                        "type": "string"
                    },
                    "referenceId": {
                        "type": "string"
                    }
                }
            },
            "DeductCreditsRequest": {
                "type": "object",
                "required": [
                    "amount",
                    "description"
                ],
                "properties": {
                    "amount": {
                        "type": "integer",
                        "minimum": 1
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "CreditTransactionResponse": {
                "type": "object",
                "properties": {
                    "transaction_id": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "added_amount": {
                        "type": "integer"
                    },
                    "deducted_amount": {
                        "type": "integer"
                    },
                    "current_balance": {
                        "type": "integer"
                    }
                }
            },
            "WalletTransactionsResponse": {
                "type": "object",
                "properties": {
                    "transactions": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": {
                                    "type": "string",
                                    "enum": [
                                        "CREDIT",
                                        "DEBIT"
                                    ]
                                },
                                "amount": {
                                    "type": "integer"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "createdAt": {
                                    "type": "string",
                                    "format": "date-time"
                                }
                            }
                        }
                    }
                }
            },
            "CreditCheckResponse": {
                "type": "object",
                "properties": {
                    "has_sufficient_credits": {
                        "type": "boolean"
                    },
                    "current_balance": {
                        "type": "integer"
                    }
                }
            }
        },
        "responses": {
            "BadRequest": {
                "description": "Invalid request",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Resource not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/ErrorResponse"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT",
                "description": "JWT token obtained from AuthService"
            },
            "serviceAuth": {
                "type": "apiKey",
                "in": "header",
                "name": "X-Service-Auth",
                "description": "Service-to-service authentication token"
            }
        }
    }
}