{
  handle: [
    {
      handler: "subroute",
      routes: [
        {
          handle: [
            {
              handler: "reverse_proxy",
               transport: {
                protocol: "http",
                tls: {},
              },
              upstreams: [
                {
                  dial: "localhost:8080",
                },
              ],
              request: {
                set: {
                  // Done to ensure the actual IP address is used in the logs
                  "X-Real-IP": ["{http.request.remote.host}"],
                  "X-Forwarded-For": ["{http.request.remote.host}"],
                  "X-Forwarded-Proto": ["{http.request.scheme}"],
                  
                  // Add the API key and authorization header to the request
                  // This would be the JWT token that the user was given OR the API key depending 
                  // on the configuration used by the `API Server`
                  "X-Veil-Key": [""],
                },
                add: {
                  // User's JWT token
                  "X-Veil-User": ["{http.request.header.Authorization}"],
                  // Request ID - this will be automatically generated by the gateway - Caddy
                  "X-Veil-Request-ID": ["{http.request.uuid}"],
                  "API-Server-Header-1": ["{http.request.header.API-Server-Header-1}"],
                  "API-Server-Header-2": ["{http.request.header.API-Server-Header-1}"],
                },
                delete: {
                  // Delete the existing Authorization  
                  Authorization: ["{http.request.header.Authorization}"],
                },
              },
              "verbose_logs": true
            },
          ],
        },
      ],
    },
  ],
  match: [
    {
      path: ["/api/<apiId>/<endpoint>"],
      method: ["GET"],
    },
  ],
  terminal: true,
}
