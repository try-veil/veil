{
  "openapi": "3.0.3",
  "info": {
    "title": "Veil SaaS Platform BFF API",
    "description": "Backend for Frontend API for the Veil SaaS platform providing user authentication, API marketplace, and key management.",
    "version": "1.0.0"
  },
  "tags": [
    {
      "name": "Auth",
      "description": "Authentication endpoints"
    },
    {
      "name": "Marketplace",
      "description": "API marketplace endpoints"
    },
    {
      "name": "Categories",
      "description": "API category management endpoints"
    },
    {
      "name": "Provider",
      "description": "API provider management endpoints"
    },
    {
      "name": "Subscriptions",
      "description": "Subscription management endpoints"
    },
    {
      "name": "Payments",
      "description": "Payment processing endpoints"
    },
    {
      "name": "Analytics",
      "description": "Analytics and reporting endpoints"
    },
    {
      "name": "Seller",
      "description": "Seller dashboard endpoints"
    },
    {
      "name": "API Keys",
      "description": "API key management endpoints"
    },
    {
      "name": "Profile",
      "description": "User profile endpoints"
    },
    {
      "name": "Admin",
      "description": "Admin panel endpoints"
    },
    {
      "name": "Approvals",
      "description": "Approval workflow endpoints"
    },
    {
      "name": "Usage",
      "description": "API usage tracking and analytics endpoints"
    },
    {
      "name": "Quota",
      "description": "API quota management and monitoring endpoints"
    },
    {
      "name": "Pricing",
      "description": "Pricing models, invoices, and billing management endpoints"
    },
    {
      "name": "Events",
      "description": "Event queue monitoring and management endpoints"
    }
  ],
  "servers": [
    {
      "url": "http://localhost:6969",
      "description": "Development server"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "operationId": "getHealth",
        "responses": {
          "200": {}
        }
      }
    },
    "/": {
      "get": {
        "operationId": "getIndex",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/auth/register": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AuthRegister",
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "description": "Create a new user account with email and password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password",
                  "firstName",
                  "lastName"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/auth/login": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AuthLogin",
        "tags": [
          "Auth"
        ],
        "summary": "Login user",
        "description": "Authenticate user with email and password, returns JWT token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "password"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/auth/verify-token": {
      "post": {
        "operationId": "postApiV1AuthVerify-token",
        "tags": [
          "Auth"
        ],
        "summary": "Verify JWT token",
        "description": "Verify the validity of a JWT token and return user information",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/auth/refresh-token": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AuthRefresh-token",
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token",
        "description": "Refresh an expired access token using a refresh token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/auth/logout": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AuthLogout",
        "tags": [
          "Auth"
        ],
        "summary": "Logout user",
        "description": "Logout user and revoke refresh token",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "required": [
                  "refreshToken"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/apis": {
      "get": {
        "operationId": "getApiV1MarketplaceApis",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/featured": {
      "get": {
        "operationId": "getApiV1MarketplaceFeatured",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/trending": {
      "get": {
        "operationId": "getApiV1MarketplaceTrending",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/search": {
      "get": {
        "operationId": "getApiV1MarketplaceSearch",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/apis/{uid}": {
      "get": {
        "operationId": "getApiV1MarketplaceApisByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/categories": {
      "get": {
        "operationId": "getApiV1MarketplaceCategories",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/apis/{uid}/subscribe": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1MarketplaceApisByUidSubscribe",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestsLimit": {
                    "type": "number"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestsLimit": {
                    "type": "number"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestsLimit": {
                    "type": "number"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/marketplace/apis/{uid}/rate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1MarketplaceApisByUidRate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "minimum": 1,
                    "maximum": 5,
                    "type": "number"
                  },
                  "review": {
                    "type": "string"
                  }
                },
                "required": [
                  "rating"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "minimum": 1,
                    "maximum": 5,
                    "type": "number"
                  },
                  "review": {
                    "type": "string"
                  }
                },
                "required": [
                  "rating"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "rating": {
                    "minimum": 1,
                    "maximum": 5,
                    "type": "number"
                  },
                  "review": {
                    "type": "string"
                  }
                },
                "required": [
                  "rating"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/categories/": {
      "get": {
        "operationId": "getApiV1Categories",
        "responses": {
          "200": {}
        }
      },
      "post": {
        "parameters": [],
        "operationId": "postApiV1Categories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/categories/{id}": {
      "get": {
        "operationId": "getApiV1CategoriesById",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "operationId": "putApiV1CategoriesById",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 1000,
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "delete": {
        "operationId": "deleteApiV1CategoriesById",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/provider/apis": {
      "get": {
        "operationId": "getApiV1ProviderApis",
        "responses": {
          "200": {}
        }
      },
      "post": {
        "parameters": [],
        "operationId": "postApiV1ProviderApis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "description": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "endpoint": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "baseUrl": {
                    "minLength": 1,
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "categoryId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "documentation": {
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "free",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "methods": {
                    "minItems": 1,
                    "maxItems": 7,
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "const": "GET",
                          "type": "string"
                        },
                        {
                          "const": "POST",
                          "type": "string"
                        },
                        {
                          "const": "PUT",
                          "type": "string"
                        },
                        {
                          "const": "PATCH",
                          "type": "string"
                        },
                        {
                          "const": "DELETE",
                          "type": "string"
                        },
                        {
                          "const": "OPTIONS",
                          "type": "string"
                        },
                        {
                          "const": "HEAD",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "requiredHeaders": {
                    "maxItems": 20,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "minLength": 1,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "value": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "isStatic": {
                          "type": "boolean"
                        },
                        "description": {
                          "maxLength": 500,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description",
                  "endpoint",
                  "baseUrl",
                  "methods"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "description": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "endpoint": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "baseUrl": {
                    "minLength": 1,
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "categoryId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "documentation": {
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "free",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "methods": {
                    "minItems": 1,
                    "maxItems": 7,
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "const": "GET",
                          "type": "string"
                        },
                        {
                          "const": "POST",
                          "type": "string"
                        },
                        {
                          "const": "PUT",
                          "type": "string"
                        },
                        {
                          "const": "PATCH",
                          "type": "string"
                        },
                        {
                          "const": "DELETE",
                          "type": "string"
                        },
                        {
                          "const": "OPTIONS",
                          "type": "string"
                        },
                        {
                          "const": "HEAD",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "requiredHeaders": {
                    "maxItems": 20,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "minLength": 1,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "value": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "isStatic": {
                          "type": "boolean"
                        },
                        "description": {
                          "maxLength": 500,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description",
                  "endpoint",
                  "baseUrl",
                  "methods"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "description": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "endpoint": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "baseUrl": {
                    "minLength": 1,
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "categoryId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "documentation": {
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "free",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "methods": {
                    "minItems": 1,
                    "maxItems": 7,
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "const": "GET",
                          "type": "string"
                        },
                        {
                          "const": "POST",
                          "type": "string"
                        },
                        {
                          "const": "PUT",
                          "type": "string"
                        },
                        {
                          "const": "PATCH",
                          "type": "string"
                        },
                        {
                          "const": "DELETE",
                          "type": "string"
                        },
                        {
                          "const": "OPTIONS",
                          "type": "string"
                        },
                        {
                          "const": "HEAD",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "requiredHeaders": {
                    "maxItems": 20,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "minLength": 1,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "value": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "isStatic": {
                          "type": "boolean"
                        },
                        "description": {
                          "maxLength": 500,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "description",
                  "endpoint",
                  "baseUrl",
                  "methods"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/provider/apis/{uid}": {
      "get": {
        "operationId": "getApiV1ProviderApisByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "putApiV1ProviderApisByUid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "description": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "endpoint": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "baseUrl": {
                    "minLength": 1,
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "categoryId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "documentation": {
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "free",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "methods": {
                    "minItems": 1,
                    "maxItems": 7,
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "const": "GET",
                          "type": "string"
                        },
                        {
                          "const": "POST",
                          "type": "string"
                        },
                        {
                          "const": "PUT",
                          "type": "string"
                        },
                        {
                          "const": "PATCH",
                          "type": "string"
                        },
                        {
                          "const": "DELETE",
                          "type": "string"
                        },
                        {
                          "const": "OPTIONS",
                          "type": "string"
                        },
                        {
                          "const": "HEAD",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "requiredHeaders": {
                    "maxItems": 20,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "minLength": 1,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "value": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "isStatic": {
                          "type": "boolean"
                        },
                        "description": {
                          "maxLength": 500,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "description": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "endpoint": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "baseUrl": {
                    "minLength": 1,
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "categoryId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "documentation": {
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "free",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "methods": {
                    "minItems": 1,
                    "maxItems": 7,
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "const": "GET",
                          "type": "string"
                        },
                        {
                          "const": "POST",
                          "type": "string"
                        },
                        {
                          "const": "PUT",
                          "type": "string"
                        },
                        {
                          "const": "PATCH",
                          "type": "string"
                        },
                        {
                          "const": "DELETE",
                          "type": "string"
                        },
                        {
                          "const": "OPTIONS",
                          "type": "string"
                        },
                        {
                          "const": "HEAD",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "requiredHeaders": {
                    "maxItems": 20,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "minLength": 1,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "value": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "isStatic": {
                          "type": "boolean"
                        },
                        "description": {
                          "maxLength": 500,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "description": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "version": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "endpoint": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "baseUrl": {
                    "minLength": 1,
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "categoryId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "documentation": {
                    "maxLength": 500,
                    "format": "uri",
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "free",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "isPublic": {
                    "type": "boolean"
                  },
                  "methods": {
                    "minItems": 1,
                    "maxItems": 7,
                    "type": "array",
                    "items": {
                      "anyOf": [
                        {
                          "const": "GET",
                          "type": "string"
                        },
                        {
                          "const": "POST",
                          "type": "string"
                        },
                        {
                          "const": "PUT",
                          "type": "string"
                        },
                        {
                          "const": "PATCH",
                          "type": "string"
                        },
                        {
                          "const": "DELETE",
                          "type": "string"
                        },
                        {
                          "const": "OPTIONS",
                          "type": "string"
                        },
                        {
                          "const": "HEAD",
                          "type": "string"
                        }
                      ]
                    }
                  },
                  "requiredHeaders": {
                    "maxItems": 20,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "minLength": 1,
                          "maxLength": 100,
                          "type": "string"
                        },
                        "value": {
                          "maxLength": 255,
                          "type": "string"
                        },
                        "isStatic": {
                          "type": "boolean"
                        },
                        "description": {
                          "maxLength": 500,
                          "type": "string"
                        }
                      },
                      "required": [
                        "name"
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "delete": {
        "operationId": "deleteApiV1ProviderApisByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/": {
      "get": {
        "operationId": "getApiV1Subscriptions",
        "responses": {
          "200": {}
        }
      },
      "post": {
        "parameters": [],
        "operationId": "postApiV1Subscriptions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "keyName": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "notes": {
                    "maxLength": 500,
                    "type": "string"
                  }
                },
                "required": [
                  "apiUid"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "keyName": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "notes": {
                    "maxLength": 500,
                    "type": "string"
                  }
                },
                "required": [
                  "apiUid"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "keyName": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "notes": {
                    "maxLength": 500,
                    "type": "string"
                  }
                },
                "required": [
                  "apiUid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/{uid}": {
      "get": {
        "operationId": "getApiV1SubscriptionsByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "put": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "putApiV1SubscriptionsByUid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "status": {
                    "anyOf": [
                      {
                        "const": "active",
                        "type": "string"
                      },
                      {
                        "const": "suspended",
                        "type": "string"
                      },
                      {
                        "const": "cancelled",
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "status": {
                    "anyOf": [
                      {
                        "const": "active",
                        "type": "string"
                      },
                      {
                        "const": "suspended",
                        "type": "string"
                      },
                      {
                        "const": "cancelled",
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 1000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 1000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "status": {
                    "anyOf": [
                      {
                        "const": "active",
                        "type": "string"
                      },
                      {
                        "const": "suspended",
                        "type": "string"
                      },
                      {
                        "const": "cancelled",
                        "type": "string"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "deleteApiV1SubscriptionsByUid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "maxLength": 500,
                    "type": "string"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "maxLength": 500,
                    "type": "string"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "maxLength": 500,
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/{uid}/usage": {
      "get": {
        "operationId": "getApiV1SubscriptionsByUidUsage",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/{uid}/analytics": {
      "get": {
        "operationId": "getApiV1SubscriptionsByUidAnalytics",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/{uid}/plan-change/preview": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "newPricingModelId",
            "required": true
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "applyImmediately",
            "required": false
          }
        ],
        "operationId": "getApiV1SubscriptionsByUidPlan-changePreview",
        "tags": [
          "Subscriptions"
        ],
        "summary": "Preview plan change",
        "description": "Preview the impact of changing subscription plan without applying the change",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/{uid}/upgrade": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1SubscriptionsByUidUpgrade",
        "tags": [
          "Subscriptions"
        ],
        "summary": "Upgrade subscription plan",
        "description": "Upgrade to a higher-tier plan with prorated billing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPricingModelId": {
                    "type": "number"
                  }
                },
                "required": [
                  "newPricingModelId"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPricingModelId": {
                    "type": "number"
                  }
                },
                "required": [
                  "newPricingModelId"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPricingModelId": {
                    "type": "number"
                  }
                },
                "required": [
                  "newPricingModelId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/subscriptions/{uid}/downgrade": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1SubscriptionsByUidDowngrade",
        "tags": [
          "Subscriptions"
        ],
        "summary": "Downgrade subscription plan",
        "description": "Downgrade to a lower-tier plan with optional immediate application",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPricingModelId": {
                    "type": "number"
                  },
                  "applyImmediately": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "newPricingModelId"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPricingModelId": {
                    "type": "number"
                  },
                  "applyImmediately": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "newPricingModelId"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "newPricingModelId": {
                    "type": "number"
                  },
                  "applyImmediately": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "newPricingModelId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/calculate-pricing": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1PaymentsCalculate-pricing",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "planType": {
                    "anyOf": [
                      {
                        "const": "basic",
                        "type": "string"
                      },
                      {
                        "const": "pro",
                        "type": "string"
                      },
                      {
                        "const": "enterprise",
                        "type": "string"
                      },
                      {
                        "const": "custom",
                        "type": "string"
                      }
                    ]
                  },
                  "billingCycle": {
                    "anyOf": [
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "one_time",
                        "type": "string"
                      }
                    ]
                  },
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 10000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 10000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "discountCode": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "quantity": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  }
                },
                "required": [
                  "apiUid"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "planType": {
                    "anyOf": [
                      {
                        "const": "basic",
                        "type": "string"
                      },
                      {
                        "const": "pro",
                        "type": "string"
                      },
                      {
                        "const": "enterprise",
                        "type": "string"
                      },
                      {
                        "const": "custom",
                        "type": "string"
                      }
                    ]
                  },
                  "billingCycle": {
                    "anyOf": [
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "one_time",
                        "type": "string"
                      }
                    ]
                  },
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 10000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 10000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "discountCode": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "quantity": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  }
                },
                "required": [
                  "apiUid"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "planType": {
                    "anyOf": [
                      {
                        "const": "basic",
                        "type": "string"
                      },
                      {
                        "const": "pro",
                        "type": "string"
                      },
                      {
                        "const": "enterprise",
                        "type": "string"
                      },
                      {
                        "const": "custom",
                        "type": "string"
                      }
                    ]
                  },
                  "billingCycle": {
                    "anyOf": [
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      },
                      {
                        "const": "one_time",
                        "type": "string"
                      }
                    ]
                  },
                  "requestsLimit": {
                    "minimum": 1,
                    "maximum": 10000000,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "maximum": 10000000,
                        "type": "integer"
                      }
                    ]
                  },
                  "discountCode": {
                    "maxLength": 50,
                    "type": "string"
                  },
                  "quantity": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  }
                },
                "required": [
                  "apiUid"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/": {
      "get": {
        "operationId": "getApiV1Payments",
        "responses": {
          "200": {}
        }
      },
      "post": {
        "parameters": [],
        "operationId": "postApiV1Payments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "amount": {
                    "minimum": 0.01,
                    "maximum": 100000,
                    "type": "number"
                  },
                  "currency": {
                    "minLength": 3,
                    "maxLength": 3,
                    "type": "string"
                  },
                  "paymentMethod": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "anyOf": [
                          {
                            "const": "card",
                            "type": "string"
                          },
                          {
                            "const": "bank_account",
                            "type": "string"
                          },
                          {
                            "const": "wallet",
                            "type": "string"
                          },
                          {
                            "const": "crypto",
                            "type": "string"
                          }
                        ]
                      },
                      "provider": {
                        "anyOf": [
                          {
                            "const": "stripe",
                            "type": "string"
                          },
                          {
                            "const": "paypal",
                            "type": "string"
                          },
                          {
                            "const": "razorpay",
                            "type": "string"
                          },
                          {
                            "const": "square",
                            "type": "string"
                          },
                          {
                            "const": "coinbase",
                            "type": "string"
                          }
                        ]
                      },
                      "details": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      }
                    },
                    "required": [
                      "type",
                      "provider"
                    ]
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "patternProperties": {
                      "^(.*)$": {}
                    }
                  }
                },
                "required": [
                  "subscriptionUid",
                  "amount",
                  "currency",
                  "paymentMethod"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "amount": {
                    "minimum": 0.01,
                    "maximum": 100000,
                    "type": "number"
                  },
                  "currency": {
                    "minLength": 3,
                    "maxLength": 3,
                    "type": "string"
                  },
                  "paymentMethod": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "anyOf": [
                          {
                            "const": "card",
                            "type": "string"
                          },
                          {
                            "const": "bank_account",
                            "type": "string"
                          },
                          {
                            "const": "wallet",
                            "type": "string"
                          },
                          {
                            "const": "crypto",
                            "type": "string"
                          }
                        ]
                      },
                      "provider": {
                        "anyOf": [
                          {
                            "const": "stripe",
                            "type": "string"
                          },
                          {
                            "const": "paypal",
                            "type": "string"
                          },
                          {
                            "const": "razorpay",
                            "type": "string"
                          },
                          {
                            "const": "square",
                            "type": "string"
                          },
                          {
                            "const": "coinbase",
                            "type": "string"
                          }
                        ]
                      },
                      "details": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      }
                    },
                    "required": [
                      "type",
                      "provider"
                    ]
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "patternProperties": {
                      "^(.*)$": {}
                    }
                  }
                },
                "required": [
                  "subscriptionUid",
                  "amount",
                  "currency",
                  "paymentMethod"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "amount": {
                    "minimum": 0.01,
                    "maximum": 100000,
                    "type": "number"
                  },
                  "currency": {
                    "minLength": 3,
                    "maxLength": 3,
                    "type": "string"
                  },
                  "paymentMethod": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "anyOf": [
                          {
                            "const": "card",
                            "type": "string"
                          },
                          {
                            "const": "bank_account",
                            "type": "string"
                          },
                          {
                            "const": "wallet",
                            "type": "string"
                          },
                          {
                            "const": "crypto",
                            "type": "string"
                          }
                        ]
                      },
                      "provider": {
                        "anyOf": [
                          {
                            "const": "stripe",
                            "type": "string"
                          },
                          {
                            "const": "paypal",
                            "type": "string"
                          },
                          {
                            "const": "razorpay",
                            "type": "string"
                          },
                          {
                            "const": "square",
                            "type": "string"
                          },
                          {
                            "const": "coinbase",
                            "type": "string"
                          }
                        ]
                      },
                      "details": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      }
                    },
                    "required": [
                      "type",
                      "provider"
                    ]
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "metadata": {
                    "type": "object",
                    "patternProperties": {
                      "^(.*)$": {}
                    }
                  }
                },
                "required": [
                  "subscriptionUid",
                  "amount",
                  "currency",
                  "paymentMethod"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/{uid}": {
      "get": {
        "operationId": "getApiV1PaymentsByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/{uid}/process": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1PaymentsByUidProcess",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentToken": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "billingAddress": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "email": {
                        "format": "email",
                        "type": "string"
                      },
                      "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "addressLine2": {
                        "type": "string"
                      },
                      "city": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "state": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "postalCode": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "country": {
                        "minLength": 2,
                        "maxLength": 2,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "addressLine1",
                      "city",
                      "state",
                      "postalCode",
                      "country"
                    ]
                  },
                  "savePaymentMethod": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "paymentToken",
                  "billingAddress"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentToken": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "billingAddress": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "email": {
                        "format": "email",
                        "type": "string"
                      },
                      "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "addressLine2": {
                        "type": "string"
                      },
                      "city": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "state": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "postalCode": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "country": {
                        "minLength": 2,
                        "maxLength": 2,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "addressLine1",
                      "city",
                      "state",
                      "postalCode",
                      "country"
                    ]
                  },
                  "savePaymentMethod": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "paymentToken",
                  "billingAddress"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentToken": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "billingAddress": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "email": {
                        "format": "email",
                        "type": "string"
                      },
                      "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "addressLine2": {
                        "type": "string"
                      },
                      "city": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "state": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "postalCode": {
                        "minLength": 1,
                        "type": "string"
                      },
                      "country": {
                        "minLength": 2,
                        "maxLength": 2,
                        "type": "string"
                      }
                    },
                    "required": [
                      "name",
                      "email",
                      "addressLine1",
                      "city",
                      "state",
                      "postalCode",
                      "country"
                    ]
                  },
                  "savePaymentMethod": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "paymentToken",
                  "billingAddress"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/{uid}/refund": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1PaymentsByUidRefund",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "minimum": 0.01,
                    "maximum": 100000,
                    "type": "number"
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "notifyCustomer": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "minimum": 0.01,
                    "maximum": 100000,
                    "type": "number"
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "notifyCustomer": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "amount": {
                    "minimum": 0.01,
                    "maximum": 100000,
                    "type": "number"
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  },
                  "notifyCustomer": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/analytics/overview": {
      "get": {
        "operationId": "getApiV1PaymentsAnalyticsOverview",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/webhook/{provider}": {
      "post": {
        "operationId": "postApiV1PaymentsWebhookByProvider",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "provider",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/methods": {
      "get": {
        "operationId": "getApiV1PaymentsMethods",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/payments/invoices": {
      "post": {
        "operationId": "postApiV1PaymentsInvoices",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/dashboard": {
      "get": {
        "operationId": "getApiV1AnalyticsDashboard",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/api-usage": {
      "get": {
        "operationId": "getApiV1AnalyticsApi-usage",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/revenue": {
      "get": {
        "operationId": "getApiV1AnalyticsRevenue",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/users": {
      "get": {
        "operationId": "getApiV1AnalyticsUsers",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/subscriptions": {
      "get": {
        "operationId": "getApiV1AnalyticsSubscriptions",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/real-time": {
      "get": {
        "operationId": "getApiV1AnalyticsReal-time",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/performance/{apiUid}": {
      "get": {
        "operationId": "getApiV1AnalyticsPerformanceByApiUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "apiUid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/geographic": {
      "get": {
        "operationId": "getApiV1AnalyticsGeographic",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/reports": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AnalyticsReports",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "query": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "anyOf": [
                          {
                            "const": "api_usage",
                            "type": "string"
                          },
                          {
                            "const": "revenue",
                            "type": "string"
                          },
                          {
                            "const": "user",
                            "type": "string"
                          },
                          {
                            "const": "subscription",
                            "type": "string"
                          },
                          {
                            "const": "performance",
                            "type": "string"
                          },
                          {
                            "const": "geographic",
                            "type": "string"
                          }
                        ]
                      },
                      "parameters": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      },
                      "filters": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      },
                      "groupBy": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "metrics": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "parameters",
                      "metrics"
                    ]
                  },
                  "schedule": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "frequency": {
                        "anyOf": [
                          {
                            "const": "daily",
                            "type": "string"
                          },
                          {
                            "const": "weekly",
                            "type": "string"
                          },
                          {
                            "const": "monthly",
                            "type": "string"
                          }
                        ]
                      },
                      "time": {
                        "type": "string"
                      },
                      "dayOfWeek": {
                        "minimum": 0,
                        "maximum": 6,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "maximum": 6,
                            "type": "integer"
                          }
                        ]
                      },
                      "dayOfMonth": {
                        "minimum": 1,
                        "maximum": 31,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 1,
                            "maximum": 31,
                            "type": "integer"
                          }
                        ]
                      }
                    }
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "format": "email",
                      "type": "string"
                    }
                  },
                  "format": {
                    "anyOf": [
                      {
                        "const": "json",
                        "type": "string"
                      },
                      {
                        "const": "csv",
                        "type": "string"
                      },
                      {
                        "const": "pdf",
                        "type": "string"
                      },
                      {
                        "const": "excel",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "query"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "query": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "anyOf": [
                          {
                            "const": "api_usage",
                            "type": "string"
                          },
                          {
                            "const": "revenue",
                            "type": "string"
                          },
                          {
                            "const": "user",
                            "type": "string"
                          },
                          {
                            "const": "subscription",
                            "type": "string"
                          },
                          {
                            "const": "performance",
                            "type": "string"
                          },
                          {
                            "const": "geographic",
                            "type": "string"
                          }
                        ]
                      },
                      "parameters": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      },
                      "filters": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      },
                      "groupBy": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "metrics": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "parameters",
                      "metrics"
                    ]
                  },
                  "schedule": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "frequency": {
                        "anyOf": [
                          {
                            "const": "daily",
                            "type": "string"
                          },
                          {
                            "const": "weekly",
                            "type": "string"
                          },
                          {
                            "const": "monthly",
                            "type": "string"
                          }
                        ]
                      },
                      "time": {
                        "type": "string"
                      },
                      "dayOfWeek": {
                        "minimum": 0,
                        "maximum": 6,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "maximum": 6,
                            "type": "integer"
                          }
                        ]
                      },
                      "dayOfMonth": {
                        "minimum": 1,
                        "maximum": 31,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 1,
                            "maximum": 31,
                            "type": "integer"
                          }
                        ]
                      }
                    }
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "format": "email",
                      "type": "string"
                    }
                  },
                  "format": {
                    "anyOf": [
                      {
                        "const": "json",
                        "type": "string"
                      },
                      {
                        "const": "csv",
                        "type": "string"
                      },
                      {
                        "const": "pdf",
                        "type": "string"
                      },
                      {
                        "const": "excel",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "query"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "query": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "anyOf": [
                          {
                            "const": "api_usage",
                            "type": "string"
                          },
                          {
                            "const": "revenue",
                            "type": "string"
                          },
                          {
                            "const": "user",
                            "type": "string"
                          },
                          {
                            "const": "subscription",
                            "type": "string"
                          },
                          {
                            "const": "performance",
                            "type": "string"
                          },
                          {
                            "const": "geographic",
                            "type": "string"
                          }
                        ]
                      },
                      "parameters": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      },
                      "filters": {
                        "type": "object",
                        "patternProperties": {
                          "^(.*)$": {}
                        }
                      },
                      "groupBy": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "metrics": {
                        "minItems": 1,
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    },
                    "required": [
                      "type",
                      "parameters",
                      "metrics"
                    ]
                  },
                  "schedule": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean"
                      },
                      "frequency": {
                        "anyOf": [
                          {
                            "const": "daily",
                            "type": "string"
                          },
                          {
                            "const": "weekly",
                            "type": "string"
                          },
                          {
                            "const": "monthly",
                            "type": "string"
                          }
                        ]
                      },
                      "time": {
                        "type": "string"
                      },
                      "dayOfWeek": {
                        "minimum": 0,
                        "maximum": 6,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "maximum": 6,
                            "type": "integer"
                          }
                        ]
                      },
                      "dayOfMonth": {
                        "minimum": 1,
                        "maximum": 31,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 1,
                            "maximum": 31,
                            "type": "integer"
                          }
                        ]
                      }
                    }
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "format": "email",
                      "type": "string"
                    }
                  },
                  "format": {
                    "anyOf": [
                      {
                        "const": "json",
                        "type": "string"
                      },
                      {
                        "const": "csv",
                        "type": "string"
                      },
                      {
                        "const": "pdf",
                        "type": "string"
                      },
                      {
                        "const": "excel",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "name",
                  "query"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/alerts": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AnalyticsAlerts",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "metric": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "threshold": {
                    "type": "object",
                    "properties": {
                      "operator": {
                        "anyOf": [
                          {
                            "const": "gt",
                            "type": "string"
                          },
                          {
                            "const": "gte",
                            "type": "string"
                          },
                          {
                            "const": "lt",
                            "type": "string"
                          },
                          {
                            "const": "lte",
                            "type": "string"
                          },
                          {
                            "const": "eq",
                            "type": "string"
                          },
                          {
                            "const": "ne",
                            "type": "string"
                          }
                        ]
                      },
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "value"
                    ]
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "operator": {
                          "anyOf": [
                            {
                              "const": "eq",
                              "type": "string"
                            },
                            {
                              "const": "ne",
                              "type": "string"
                            },
                            {
                              "const": "contains",
                              "type": "string"
                            },
                            {
                              "const": "in",
                              "type": "string"
                            },
                            {
                              "const": "not_in",
                              "type": "string"
                            }
                          ]
                        },
                        "value": {}
                      },
                      "required": [
                        "field",
                        "operator",
                        "value"
                      ]
                    }
                  },
                  "duration_minutes": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "severity": {
                    "anyOf": [
                      {
                        "const": "low",
                        "type": "string"
                      },
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "critical",
                        "type": "string"
                      }
                    ]
                  },
                  "channels": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "anyOf": [
                            {
                              "const": "email",
                              "type": "string"
                            },
                            {
                              "const": "webhook",
                              "type": "string"
                            },
                            {
                              "const": "slack",
                              "type": "string"
                            },
                            {
                              "const": "sms",
                              "type": "string"
                            },
                            {
                              "const": "pagerduty",
                              "type": "string"
                            }
                          ]
                        },
                        "config": {
                          "type": "object",
                          "patternProperties": {
                            "^(.*)$": {}
                          }
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "metric",
                  "threshold",
                  "channels"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "metric": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "threshold": {
                    "type": "object",
                    "properties": {
                      "operator": {
                        "anyOf": [
                          {
                            "const": "gt",
                            "type": "string"
                          },
                          {
                            "const": "gte",
                            "type": "string"
                          },
                          {
                            "const": "lt",
                            "type": "string"
                          },
                          {
                            "const": "lte",
                            "type": "string"
                          },
                          {
                            "const": "eq",
                            "type": "string"
                          },
                          {
                            "const": "ne",
                            "type": "string"
                          }
                        ]
                      },
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "value"
                    ]
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "operator": {
                          "anyOf": [
                            {
                              "const": "eq",
                              "type": "string"
                            },
                            {
                              "const": "ne",
                              "type": "string"
                            },
                            {
                              "const": "contains",
                              "type": "string"
                            },
                            {
                              "const": "in",
                              "type": "string"
                            },
                            {
                              "const": "not_in",
                              "type": "string"
                            }
                          ]
                        },
                        "value": {}
                      },
                      "required": [
                        "field",
                        "operator",
                        "value"
                      ]
                    }
                  },
                  "duration_minutes": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "severity": {
                    "anyOf": [
                      {
                        "const": "low",
                        "type": "string"
                      },
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "critical",
                        "type": "string"
                      }
                    ]
                  },
                  "channels": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "anyOf": [
                            {
                              "const": "email",
                              "type": "string"
                            },
                            {
                              "const": "webhook",
                              "type": "string"
                            },
                            {
                              "const": "slack",
                              "type": "string"
                            },
                            {
                              "const": "sms",
                              "type": "string"
                            },
                            {
                              "const": "pagerduty",
                              "type": "string"
                            }
                          ]
                        },
                        "config": {
                          "type": "object",
                          "patternProperties": {
                            "^(.*)$": {}
                          }
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "metric",
                  "threshold",
                  "channels"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "description": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "metric": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "threshold": {
                    "type": "object",
                    "properties": {
                      "operator": {
                        "anyOf": [
                          {
                            "const": "gt",
                            "type": "string"
                          },
                          {
                            "const": "gte",
                            "type": "string"
                          },
                          {
                            "const": "lt",
                            "type": "string"
                          },
                          {
                            "const": "lte",
                            "type": "string"
                          },
                          {
                            "const": "eq",
                            "type": "string"
                          },
                          {
                            "const": "ne",
                            "type": "string"
                          }
                        ]
                      },
                      "value": {
                        "type": "number"
                      },
                      "unit": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "value"
                    ]
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string"
                        },
                        "operator": {
                          "anyOf": [
                            {
                              "const": "eq",
                              "type": "string"
                            },
                            {
                              "const": "ne",
                              "type": "string"
                            },
                            {
                              "const": "contains",
                              "type": "string"
                            },
                            {
                              "const": "in",
                              "type": "string"
                            },
                            {
                              "const": "not_in",
                              "type": "string"
                            }
                          ]
                        },
                        "value": {}
                      },
                      "required": [
                        "field",
                        "operator",
                        "value"
                      ]
                    }
                  },
                  "duration_minutes": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "severity": {
                    "anyOf": [
                      {
                        "const": "low",
                        "type": "string"
                      },
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "critical",
                        "type": "string"
                      }
                    ]
                  },
                  "channels": {
                    "minItems": 1,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "anyOf": [
                            {
                              "const": "email",
                              "type": "string"
                            },
                            {
                              "const": "webhook",
                              "type": "string"
                            },
                            {
                              "const": "slack",
                              "type": "string"
                            },
                            {
                              "const": "sms",
                              "type": "string"
                            },
                            {
                              "const": "pagerduty",
                              "type": "string"
                            }
                          ]
                        },
                        "config": {
                          "type": "object",
                          "patternProperties": {
                            "^(.*)$": {}
                          }
                        }
                      },
                      "required": [
                        "type",
                        "config"
                      ]
                    }
                  }
                },
                "required": [
                  "name",
                  "metric",
                  "threshold",
                  "channels"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/export": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AnalyticsExport",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "dashboard_uid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "format": {
                    "anyOf": [
                      {
                        "const": "json",
                        "type": "string"
                      },
                      {
                        "const": "pdf",
                        "type": "string"
                      },
                      {
                        "const": "png",
                        "type": "string"
                      }
                    ]
                  },
                  "date_range": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "to": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to"
                    ]
                  },
                  "include_data": {
                    "type": "boolean"
                  },
                  "compress": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "dashboard_uid",
                  "format",
                  "date_range"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "dashboard_uid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "format": {
                    "anyOf": [
                      {
                        "const": "json",
                        "type": "string"
                      },
                      {
                        "const": "pdf",
                        "type": "string"
                      },
                      {
                        "const": "png",
                        "type": "string"
                      }
                    ]
                  },
                  "date_range": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "to": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to"
                    ]
                  },
                  "include_data": {
                    "type": "boolean"
                  },
                  "compress": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "dashboard_uid",
                  "format",
                  "date_range"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "dashboard_uid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "format": {
                    "anyOf": [
                      {
                        "const": "json",
                        "type": "string"
                      },
                      {
                        "const": "pdf",
                        "type": "string"
                      },
                      {
                        "const": "png",
                        "type": "string"
                      }
                    ]
                  },
                  "date_range": {
                    "type": "object",
                    "properties": {
                      "from": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "to": {
                        "format": "date-time",
                        "type": "string"
                      }
                    },
                    "required": [
                      "from",
                      "to"
                    ]
                  },
                  "include_data": {
                    "type": "boolean"
                  },
                  "compress": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "dashboard_uid",
                  "format",
                  "date_range"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/ab-test/{testId}": {
      "get": {
        "operationId": "getApiV1AnalyticsAb-testByTestId",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "testId",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/cohort": {
      "get": {
        "operationId": "getApiV1AnalyticsCohort",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/trending-apis": {
      "get": {
        "operationId": "getApiV1AnalyticsTrending-apis",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/analytics/leaderboard": {
      "get": {
        "operationId": "getApiV1AnalyticsLeaderboard",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/seller/dashboard": {
      "get": {
        "operationId": "getApiV1SellerDashboard",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/seller/apis": {
      "get": {
        "operationId": "getApiV1SellerApis",
        "responses": {
          "200": {}
        }
      },
      "post": {
        "parameters": [],
        "operationId": "postApiV1SellerApis",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "number"
                  },
                  "documentation": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "type": "number"
                  },
                  "isPublic": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "endpoint",
                  "baseUrl"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "number"
                  },
                  "documentation": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "type": "number"
                  },
                  "isPublic": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "endpoint",
                  "baseUrl"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "version": {
                    "type": "string"
                  },
                  "endpoint": {
                    "type": "string"
                  },
                  "baseUrl": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "number"
                  },
                  "documentation": {
                    "type": "string"
                  },
                  "price": {
                    "type": "string"
                  },
                  "pricingModel": {
                    "anyOf": [
                      {
                        "const": "per_request",
                        "type": "string"
                      },
                      {
                        "const": "monthly",
                        "type": "string"
                      },
                      {
                        "const": "yearly",
                        "type": "string"
                      }
                    ]
                  },
                  "requestLimit": {
                    "type": "number"
                  },
                  "isPublic": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "name",
                  "description",
                  "endpoint",
                  "baseUrl"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/seller/apis/{uid}": {
      "get": {
        "operationId": "getApiV1SellerApisByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "put": {
        "operationId": "putApiV1SellerApisByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "delete": {
        "operationId": "deleteApiV1SellerApisByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/seller/apis/{uid}/toggle-status": {
      "patch": {
        "operationId": "patchApiV1SellerApisByUidToggle-status",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/seller/apis/{uid}/analytics": {
      "get": {
        "operationId": "getApiV1SellerApisByUidAnalytics",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/api-keys/": {
      "get": {
        "operationId": "getApiV1Api-keys",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/api-keys/subscription/{subscriptionUid}": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "subscriptionUid",
            "required": true
          }
        ],
        "operationId": "postApiV1Api-keysSubscriptionBySubscriptionUid",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "expiresAt": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/api-keys/{uid}": {
      "get": {
        "operationId": "getApiV1Api-keysByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "put": {
        "operationId": "putApiV1Api-keysByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      },
      "delete": {
        "operationId": "deleteApiV1Api-keysByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/api-keys/{uid}/regenerate": {
      "post": {
        "operationId": "postApiV1Api-keysByUidRegenerate",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/profile/": {
      "get": {
        "operationId": "getApiV1Profile",
        "responses": {
          "200": {}
        }
      },
      "put": {
        "parameters": [],
        "operationId": "putApiV1Profile",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/profile/change-password": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1ProfileChange-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "currentPassword": {
                    "type": "string"
                  },
                  "newPassword": {
                    "type": "string"
                  }
                },
                "required": [
                  "currentPassword",
                  "newPassword"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/profile/dashboard": {
      "get": {
        "operationId": "getApiV1ProfileDashboard",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/profile/subscriptions": {
      "get": {
        "operationId": "getApiV1ProfileSubscriptions",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/profile/subscriptions/{uid}": {
      "delete": {
        "operationId": "deleteApiV1ProfileSubscriptionsByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovals",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/pending": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsPending",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/overdue": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsOverdue",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/stats": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsStats",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/{uid}": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/{uid}/decision": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1AdminAdminApprovalsByUidDecision",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "decision": {
                    "anyOf": [
                      {
                        "const": "approved",
                        "type": "string"
                      },
                      {
                        "const": "rejected",
                        "type": "string"
                      },
                      {
                        "const": "pending_info",
                        "type": "string"
                      },
                      {
                        "const": "escalated",
                        "type": "string"
                      }
                    ]
                  },
                  "comments": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "followUpRequired": {
                    "type": "boolean"
                  },
                  "followUpDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "escalateTo": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "internalNotes": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "decision",
                  "comments"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "decision": {
                    "anyOf": [
                      {
                        "const": "approved",
                        "type": "string"
                      },
                      {
                        "const": "rejected",
                        "type": "string"
                      },
                      {
                        "const": "pending_info",
                        "type": "string"
                      },
                      {
                        "const": "escalated",
                        "type": "string"
                      }
                    ]
                  },
                  "comments": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "followUpRequired": {
                    "type": "boolean"
                  },
                  "followUpDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "escalateTo": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "internalNotes": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "decision",
                  "comments"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "decision": {
                    "anyOf": [
                      {
                        "const": "approved",
                        "type": "string"
                      },
                      {
                        "const": "rejected",
                        "type": "string"
                      },
                      {
                        "const": "pending_info",
                        "type": "string"
                      },
                      {
                        "const": "escalated",
                        "type": "string"
                      }
                    ]
                  },
                  "comments": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "conditions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "followUpRequired": {
                    "type": "boolean"
                  },
                  "followUpDate": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "escalateTo": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "internalNotes": {
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "decision",
                  "comments"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/{uid}/assign": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1AdminAdminApprovalsByUidAssign",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assigneeId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "reason": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "assigneeId"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "assigneeId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "reason": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "assigneeId"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "assigneeId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "reason": {
                    "maxLength": 500,
                    "type": "string"
                  },
                  "dueDate": {
                    "format": "date-time",
                    "type": "string"
                  }
                },
                "required": [
                  "assigneeId"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/{uid}/escalate": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1AdminAdminApprovalsByUidEscalate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "escalateTo": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "urgent",
                        "type": "string"
                      }
                    ]
                  },
                  "urgency": {
                    "anyOf": [
                      {
                        "const": "normal",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "critical",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "escalateTo",
                  "reason"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "escalateTo": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "urgent",
                        "type": "string"
                      }
                    ]
                  },
                  "urgency": {
                    "anyOf": [
                      {
                        "const": "normal",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "critical",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "escalateTo",
                  "reason"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "escalateTo": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "urgent",
                        "type": "string"
                      }
                    ]
                  },
                  "urgency": {
                    "anyOf": [
                      {
                        "const": "normal",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "critical",
                        "type": "string"
                      }
                    ]
                  }
                },
                "required": [
                  "escalateTo",
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/{uid}/comments": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1AdminAdminApprovalsByUidComments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "isInternal": {
                    "type": "boolean"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mentionedUsers": {
                    "type": "array",
                    "items": {
                      "minimum": 1,
                      "anyOf": [
                        {
                          "format": "integer",
                          "default": 0,
                          "type": "string"
                        },
                        {
                          "minimum": 1,
                          "type": "integer"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "content"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "isInternal": {
                    "type": "boolean"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mentionedUsers": {
                    "type": "array",
                    "items": {
                      "minimum": 1,
                      "anyOf": [
                        {
                          "format": "integer",
                          "default": 0,
                          "type": "string"
                        },
                        {
                          "minimum": 1,
                          "type": "integer"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "content"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "isInternal": {
                    "type": "boolean"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mentionedUsers": {
                    "type": "array",
                    "items": {
                      "minimum": 1,
                      "anyOf": [
                        {
                          "format": "integer",
                          "default": 0,
                          "type": "string"
                        },
                        {
                          "minimum": 1,
                          "type": "integer"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsByUidComments",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/bulk": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1AdminAdminApprovalsBulk",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "approvalIds": {
                    "minItems": 1,
                    "maxItems": 100,
                    "type": "array",
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "decision": {
                    "anyOf": [
                      {
                        "const": "approved",
                        "type": "string"
                      },
                      {
                        "const": "rejected",
                        "type": "string"
                      }
                    ]
                  },
                  "comments": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "sendNotifications": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "approvalIds",
                  "decision",
                  "comments"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "approvalIds": {
                    "minItems": 1,
                    "maxItems": 100,
                    "type": "array",
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "decision": {
                    "anyOf": [
                      {
                        "const": "approved",
                        "type": "string"
                      },
                      {
                        "const": "rejected",
                        "type": "string"
                      }
                    ]
                  },
                  "comments": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "sendNotifications": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "approvalIds",
                  "decision",
                  "comments"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "approvalIds": {
                    "minItems": 1,
                    "maxItems": 100,
                    "type": "array",
                    "items": {
                      "format": "uuid",
                      "type": "string"
                    }
                  },
                  "decision": {
                    "anyOf": [
                      {
                        "const": "approved",
                        "type": "string"
                      },
                      {
                        "const": "rejected",
                        "type": "string"
                      }
                    ]
                  },
                  "comments": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "sendNotifications": {
                    "type": "boolean"
                  }
                },
                "required": [
                  "approvalIds",
                  "decision",
                  "comments"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/templates": {
      "post": {
        "operationId": "postApiV1AdminAdminApprovalsTemplates",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/analytics/overview": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsAnalyticsOverview",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/admin/approvals/sla/performance": {
      "get": {
        "operationId": "getApiV1AdminAdminApprovalsSlaPerformance",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/stats": {
      "get": {
        "operationId": "getApiV1AdminStats",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/apis/pending": {
      "get": {
        "operationId": "getApiV1AdminApisPending",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/apis/{uid}/approve": {
      "post": {
        "operationId": "postApiV1AdminApisByUidApprove",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/apis/{uid}/reject": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1AdminApisByUidReject",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/categories": {
      "get": {
        "operationId": "getApiV1AdminCategories",
        "responses": {
          "200": {}
        }
      },
      "post": {
        "parameters": [],
        "operationId": "postApiV1AdminCategories",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/admin/categories/{id}": {
      "delete": {
        "operationId": "deleteApiV1AdminCategoriesById",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/approvals/": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1Approvals",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "anyOf": [
                      {
                        "const": "api_submission",
                        "type": "string"
                      },
                      {
                        "const": "provider_registration",
                        "type": "string"
                      },
                      {
                        "const": "api_update",
                        "type": "string"
                      },
                      {
                        "const": "subscription_upgrade",
                        "type": "string"
                      },
                      {
                        "const": "refund_request",
                        "type": "string"
                      },
                      {
                        "const": "account_deletion",
                        "type": "string"
                      },
                      {
                        "const": "dispute_resolution",
                        "type": "string"
                      },
                      {
                        "const": "content_moderation",
                        "type": "string"
                      }
                    ]
                  },
                  "entityId": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "entityType": {
                    "anyOf": [
                      {
                        "const": "api",
                        "type": "string"
                      },
                      {
                        "const": "user",
                        "type": "string"
                      },
                      {
                        "const": "subscription",
                        "type": "string"
                      },
                      {
                        "const": "payment",
                        "type": "string"
                      },
                      {
                        "const": "content",
                        "type": "string"
                      }
                    ]
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "const": "low",
                        "type": "string"
                      },
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "urgent",
                        "type": "string"
                      }
                    ]
                  },
                  "data": {
                    "type": "object",
                    "patternProperties": {
                      "^(.*)$": {}
                    }
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expectedResolution": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "type",
                  "entityId",
                  "entityType",
                  "reason"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "anyOf": [
                      {
                        "const": "api_submission",
                        "type": "string"
                      },
                      {
                        "const": "provider_registration",
                        "type": "string"
                      },
                      {
                        "const": "api_update",
                        "type": "string"
                      },
                      {
                        "const": "subscription_upgrade",
                        "type": "string"
                      },
                      {
                        "const": "refund_request",
                        "type": "string"
                      },
                      {
                        "const": "account_deletion",
                        "type": "string"
                      },
                      {
                        "const": "dispute_resolution",
                        "type": "string"
                      },
                      {
                        "const": "content_moderation",
                        "type": "string"
                      }
                    ]
                  },
                  "entityId": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "entityType": {
                    "anyOf": [
                      {
                        "const": "api",
                        "type": "string"
                      },
                      {
                        "const": "user",
                        "type": "string"
                      },
                      {
                        "const": "subscription",
                        "type": "string"
                      },
                      {
                        "const": "payment",
                        "type": "string"
                      },
                      {
                        "const": "content",
                        "type": "string"
                      }
                    ]
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "const": "low",
                        "type": "string"
                      },
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "urgent",
                        "type": "string"
                      }
                    ]
                  },
                  "data": {
                    "type": "object",
                    "patternProperties": {
                      "^(.*)$": {}
                    }
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expectedResolution": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "type",
                  "entityId",
                  "entityType",
                  "reason"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "type": {
                    "anyOf": [
                      {
                        "const": "api_submission",
                        "type": "string"
                      },
                      {
                        "const": "provider_registration",
                        "type": "string"
                      },
                      {
                        "const": "api_update",
                        "type": "string"
                      },
                      {
                        "const": "subscription_upgrade",
                        "type": "string"
                      },
                      {
                        "const": "refund_request",
                        "type": "string"
                      },
                      {
                        "const": "account_deletion",
                        "type": "string"
                      },
                      {
                        "const": "dispute_resolution",
                        "type": "string"
                      },
                      {
                        "const": "content_moderation",
                        "type": "string"
                      }
                    ]
                  },
                  "entityId": {
                    "minLength": 1,
                    "type": "string"
                  },
                  "entityType": {
                    "anyOf": [
                      {
                        "const": "api",
                        "type": "string"
                      },
                      {
                        "const": "user",
                        "type": "string"
                      },
                      {
                        "const": "subscription",
                        "type": "string"
                      },
                      {
                        "const": "payment",
                        "type": "string"
                      },
                      {
                        "const": "content",
                        "type": "string"
                      }
                    ]
                  },
                  "priority": {
                    "anyOf": [
                      {
                        "const": "low",
                        "type": "string"
                      },
                      {
                        "const": "medium",
                        "type": "string"
                      },
                      {
                        "const": "high",
                        "type": "string"
                      },
                      {
                        "const": "urgent",
                        "type": "string"
                      }
                    ]
                  },
                  "data": {
                    "type": "object",
                    "patternProperties": {
                      "^(.*)$": {}
                    }
                  },
                  "reason": {
                    "minLength": 1,
                    "maxLength": 1000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "expectedResolution": {
                    "format": "date-time",
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                },
                "required": [
                  "type",
                  "entityId",
                  "entityType",
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "operationId": "getApiV1Approvals",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/approvals/{uid}": {
      "get": {
        "operationId": "getApiV1ApprovalsByUid",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/approvals/{uid}/cancel": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1ApprovalsByUidCancel",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "reason": {
                    "minLength": 1,
                    "maxLength": 500,
                    "type": "string"
                  }
                },
                "required": [
                  "reason"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/approvals/{uid}/comments": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "operationId": "postApiV1ApprovalsByUidComments",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mentionedUsers": {
                    "type": "array",
                    "items": {
                      "minimum": 1,
                      "anyOf": [
                        {
                          "format": "integer",
                          "default": 0,
                          "type": "string"
                        },
                        {
                          "minimum": 1,
                          "type": "integer"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "content"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mentionedUsers": {
                    "type": "array",
                    "items": {
                      "minimum": 1,
                      "anyOf": [
                        {
                          "format": "integer",
                          "default": 0,
                          "type": "string"
                        },
                        {
                          "minimum": 1,
                          "type": "integer"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "content"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "content": {
                    "minLength": 1,
                    "maxLength": 2000,
                    "type": "string"
                  },
                  "attachments": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "mentionedUsers": {
                    "type": "array",
                    "items": {
                      "minimum": 1,
                      "anyOf": [
                        {
                          "format": "integer",
                          "default": 0,
                          "type": "string"
                        },
                        {
                          "minimum": 1,
                          "type": "integer"
                        }
                      ]
                    }
                  }
                },
                "required": [
                  "content"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      },
      "get": {
        "operationId": "getApiV1ApprovalsByUidComments",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/approvals/{uid}/status": {
      "get": {
        "operationId": "getApiV1ApprovalsByUidStatus",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "uid",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/approvals/templates": {
      "get": {
        "operationId": "getApiV1ApprovalsTemplates",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/events": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1UsageEvents",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "api_path": {
                          "type": "string"
                        },
                        "subscription_key": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "number"
                        },
                        "status_code": {
                          "type": "number"
                        },
                        "success": {
                          "type": "boolean"
                        },
                        "timestamp": {
                          "type": "string"
                        },
                        "request_size": {
                          "type": "number"
                        },
                        "response_size": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "api_path",
                        "subscription_key",
                        "method",
                        "response_time_ms",
                        "status_code",
                        "success",
                        "timestamp",
                        "request_size",
                        "response_size"
                      ]
                    }
                  }
                },
                "required": [
                  "events"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "api_path": {
                          "type": "string"
                        },
                        "subscription_key": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "number"
                        },
                        "status_code": {
                          "type": "number"
                        },
                        "success": {
                          "type": "boolean"
                        },
                        "timestamp": {
                          "type": "string"
                        },
                        "request_size": {
                          "type": "number"
                        },
                        "response_size": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "api_path",
                        "subscription_key",
                        "method",
                        "response_time_ms",
                        "status_code",
                        "success",
                        "timestamp",
                        "request_size",
                        "response_size"
                      ]
                    }
                  }
                },
                "required": [
                  "events"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "events": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "api_path": {
                          "type": "string"
                        },
                        "subscription_key": {
                          "type": "string"
                        },
                        "method": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "number"
                        },
                        "status_code": {
                          "type": "number"
                        },
                        "success": {
                          "type": "boolean"
                        },
                        "timestamp": {
                          "type": "string"
                        },
                        "request_size": {
                          "type": "number"
                        },
                        "response_size": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "api_path",
                        "subscription_key",
                        "method",
                        "response_time_ms",
                        "status_code",
                        "success",
                        "timestamp",
                        "request_size",
                        "response_size"
                      ]
                    }
                  }
                },
                "required": [
                  "events"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/stats": {
      "get": {
        "parameters": [
          {
            "anyOf": [
              {
                "const": "hour",
                "type": "string"
              },
              {
                "const": "day",
                "type": "string"
              },
              {
                "const": "month",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "period",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "api_id",
            "required": false
          },
          {
            "anyOf": [
              {
                "const": "day",
                "type": "string"
              },
              {
                "const": "week",
                "type": "string"
              },
              {
                "const": "month",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "timeframe",
            "required": false
          }
        ],
        "operationId": "getApiV1UsageStats",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/trends": {
      "get": {
        "parameters": [
          {
            "anyOf": [
              {
                "const": "day",
                "type": "string"
              },
              {
                "const": "week",
                "type": "string"
              },
              {
                "const": "month",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "timeframe",
            "required": false
          },
          {
            "anyOf": [
              {
                "const": "hour",
                "type": "string"
              },
              {
                "const": "day",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "granularity",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "api_key_id",
            "required": false
          }
        ],
        "operationId": "getApiV1UsageTrends",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/top-apis": {
      "get": {
        "parameters": [
          {
            "anyOf": [
              {
                "const": "day",
                "type": "string"
              },
              {
                "const": "week",
                "type": "string"
              },
              {
                "const": "month",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "timeframe",
            "required": false
          },
          {
            "minimum": 1,
            "maximum": 100,
            "anyOf": [
              {
                "format": "numeric",
                "default": 0,
                "type": "string"
              },
              {
                "minimum": 1,
                "maximum": 100,
                "type": "number"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "limit",
            "required": false
          }
        ],
        "operationId": "getApiV1UsageTop-apis",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/rate-limits": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "api_key_id",
            "required": false
          }
        ],
        "operationId": "getApiV1UsageRate-limits",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/summary": {
      "get": {
        "parameters": [
          {
            "anyOf": [
              {
                "const": "day",
                "type": "string"
              },
              {
                "const": "week",
                "type": "string"
              },
              {
                "const": "month",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "timeframe",
            "required": false
          }
        ],
        "operationId": "getApiV1UsageSummary",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/usage/export": {
      "get": {
        "parameters": [
          {
            "anyOf": [
              {
                "const": "json",
                "type": "string"
              },
              {
                "const": "csv",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "format",
            "required": false
          },
          {
            "anyOf": [
              {
                "const": "day",
                "type": "string"
              },
              {
                "const": "week",
                "type": "string"
              },
              {
                "const": "month",
                "type": "string"
              }
            ],
            "schema": {},
            "in": "query",
            "name": "timeframe",
            "required": false
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "api_id",
            "required": false
          }
        ],
        "operationId": "getApiV1UsageExport",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/quota/{apiKeyId}": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "apiKeyId",
            "required": true
          }
        ],
        "operationId": "getApiV1QuotaByApiKeyId",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/quota/{apiKeyId}/check": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "apiKeyId",
            "required": true
          }
        ],
        "operationId": "postApiV1QuotaByApiKeyIdCheck",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestCount": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestCount": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "requestCount": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/quota/{apiKeyId}/usage-by-api": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "apiKeyId",
            "required": true
          }
        ],
        "operationId": "getApiV1QuotaByApiKeyIdUsage-by-api",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/quota/alerts": {
      "get": {
        "operationId": "getApiV1QuotaAlerts",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/quota/{apiKeyId}/exhaustion-estimate": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "apiKeyId",
            "required": true
          }
        ],
        "operationId": "getApiV1QuotaByApiKeyIdExhaustion-estimate",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/quota/summary": {
      "get": {
        "operationId": "getApiV1QuotaSummary",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/models": {
      "get": {
        "operationId": "getApiV1PricingModels",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/models/{id}": {
      "get": {
        "operationId": "getApiV1PricingModelsById",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/calculate": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1PricingCalculate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "pricingModelId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "usage": {
                    "type": "object",
                    "properties": {
                      "subscriptionId": {
                        "minimum": 1,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 1,
                            "type": "integer"
                          }
                        ]
                      },
                      "totalRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "successfulRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "failedRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "dataTransferredBytes": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "dataTransferredGB": {
                        "minimum": 0,
                        "type": "number"
                      }
                    },
                    "required": [
                      "subscriptionId",
                      "totalRequests",
                      "successfulRequests",
                      "failedRequests",
                      "dataTransferredBytes",
                      "dataTransferredGB"
                    ]
                  },
                  "promotionCode": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "apiUid",
                  "pricingModelId",
                  "usage"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "pricingModelId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "usage": {
                    "type": "object",
                    "properties": {
                      "subscriptionId": {
                        "minimum": 1,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 1,
                            "type": "integer"
                          }
                        ]
                      },
                      "totalRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "successfulRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "failedRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "dataTransferredBytes": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "dataTransferredGB": {
                        "minimum": 0,
                        "type": "number"
                      }
                    },
                    "required": [
                      "subscriptionId",
                      "totalRequests",
                      "successfulRequests",
                      "failedRequests",
                      "dataTransferredBytes",
                      "dataTransferredGB"
                    ]
                  },
                  "promotionCode": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "apiUid",
                  "pricingModelId",
                  "usage"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "apiUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "pricingModelId": {
                    "minimum": 1,
                    "anyOf": [
                      {
                        "format": "integer",
                        "default": 0,
                        "type": "string"
                      },
                      {
                        "minimum": 1,
                        "type": "integer"
                      }
                    ]
                  },
                  "usage": {
                    "type": "object",
                    "properties": {
                      "subscriptionId": {
                        "minimum": 1,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 1,
                            "type": "integer"
                          }
                        ]
                      },
                      "totalRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "successfulRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "failedRequests": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "dataTransferredBytes": {
                        "minimum": 0,
                        "anyOf": [
                          {
                            "format": "integer",
                            "default": 0,
                            "type": "string"
                          },
                          {
                            "minimum": 0,
                            "type": "integer"
                          }
                        ]
                      },
                      "dataTransferredGB": {
                        "minimum": 0,
                        "type": "number"
                      }
                    },
                    "required": [
                      "subscriptionId",
                      "totalRequests",
                      "successfulRequests",
                      "failedRequests",
                      "dataTransferredBytes",
                      "dataTransferredGB"
                    ]
                  },
                  "promotionCode": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "apiUid",
                  "pricingModelId",
                  "usage"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/promotions/validate": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1PricingPromotionsValidate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "code"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "code"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/promotions/apply": {
      "post": {
        "parameters": [],
        "operationId": "postApiV1PricingPromotionsApply",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "code": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "subscriptionUid",
                  "code"
                ]
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "code": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "subscriptionUid",
                  "code"
                ]
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "subscriptionUid": {
                    "format": "uuid",
                    "type": "string"
                  },
                  "code": {
                    "minLength": 1,
                    "maxLength": 50,
                    "type": "string"
                  }
                },
                "required": [
                  "subscriptionUid",
                  "code"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/invoices": {
      "get": {
        "operationId": "getApiV1PricingInvoices",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/invoices/{id}": {
      "get": {
        "operationId": "getApiV1PricingInvoicesById",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/invoices/{id}/pay": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "id",
            "required": true
          }
        ],
        "operationId": "postApiV1PricingInvoicesByIdPay",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paidDate": {
                    "type": "string"
                  },
                  "paymentMethod": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "transactionId": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "notes": {
                    "maxLength": 500,
                    "type": "string"
                  }
                }
              }
            },
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "paidDate": {
                    "type": "string"
                  },
                  "paymentMethod": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "transactionId": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "notes": {
                    "maxLength": 500,
                    "type": "string"
                  }
                }
              }
            },
            "text/plain": {
              "schema": {
                "type": "object",
                "properties": {
                  "paidDate": {
                    "type": "string"
                  },
                  "paymentMethod": {
                    "minLength": 1,
                    "maxLength": 100,
                    "type": "string"
                  },
                  "transactionId": {
                    "minLength": 1,
                    "maxLength": 200,
                    "type": "string"
                  },
                  "notes": {
                    "maxLength": 500,
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/pricing/billing-periods": {
      "get": {
        "operationId": "getApiV1PricingBilling-periods",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/events/stats": {
      "get": {
        "operationId": "getApiV1EventsStats",
        "tags": [
          "Events"
        ],
        "summary": "Get event queue statistics",
        "description": "Returns statistics about the event queue including pending, processing, completed, failed, and dead letter counts",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/events/dead-letter": {
      "get": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "limit",
            "required": false
          }
        ],
        "operationId": "getApiV1EventsDead-letter",
        "tags": [
          "Events"
        ],
        "summary": "Get dead letter events",
        "description": "Returns events that failed after maximum retry attempts and need manual intervention",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/events/dead-letter/{eventId}/retry": {
      "post": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "path",
            "name": "eventId",
            "required": true
          }
        ],
        "operationId": "postApiV1EventsDead-letterByEventIdRetry",
        "tags": [
          "Events"
        ],
        "summary": "Retry a dead letter event",
        "description": "Requeue a failed event for processing",
        "responses": {
          "200": {}
        }
      }
    },
    "/api/v1/events/cleanup": {
      "delete": {
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "olderThanDays",
            "required": false
          }
        ],
        "operationId": "deleteApiV1EventsCleanup",
        "tags": [
          "Events"
        ],
        "summary": "Clean up old completed events",
        "description": "Delete completed events older than specified days to free up database space",
        "responses": {
          "200": {}
        }
      }
    }
  },
  "components": {
    "schemas": {}
  }
}
