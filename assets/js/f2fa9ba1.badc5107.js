"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9211],{16724:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"api/analytics/billing","title":"Billing Reports API Specification","description":"Overview","source":"@site/docs/api/analytics/billing.md","sourceDirName":"api/analytics","slug":"/api/analytics/billing","permalink":"/docs/api/analytics/billing","draft":false,"unlisted":false,"editUrl":"https://github.com/try-veil/veil/tree/main/docs/docs/api/analytics/billing.md","tags":[],"version":"current","frontMatter":{}}');var r=i(23420),t=i(54942);const a={},l="Billing Reports API Specification",c={},d=[{value:"Overview",id:"overview",level:2},{value:"Endpoints",id:"endpoints",level:2},{value:"Get Billing Summary",id:"get-billing-summary",level:3},{value:"Query Parameters",id:"query-parameters",level:4},{value:"Success Response (200 OK)",id:"success-response-200-ok",level:4},{value:"Get Invoice List",id:"get-invoice-list",level:3},{value:"Query Parameters",id:"query-parameters-1",level:4},{value:"Success Response (200 OK)",id:"success-response-200-ok-1",level:4},{value:"Get Usage Charges",id:"get-usage-charges",level:3},{value:"Query Parameters",id:"query-parameters-2",level:4},{value:"Success Response (200 OK)",id:"success-response-200-ok-2",level:4},{value:"Notes",id:"notes",level:2}];function o(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"billing-reports-api-specification",children:"Billing Reports API Specification"})}),"\n",(0,r.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,r.jsx)(n.p,{children:"The billing reports endpoints provide access to billing information, invoices, and usage-based charges."}),"\n",(0,r.jsx)(n.h2,{id:"endpoints",children:"Endpoints"}),"\n",(0,r.jsx)(n.h3,{id:"get-billing-summary",children:"Get Billing Summary"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /v1/analytics/billing/summary\n"})}),"\n",(0,r.jsx)(n.h4,{id:"query-parameters",children:"Query Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"period: string     // Billing period (current, previous, all)\nfrom: string       // Start date (ISO 8601)\nto: string        // End date (ISO 8601)\n"})}),"\n",(0,r.jsx)(n.h4,{id:"success-response-200-ok",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "period": {\n    "from": "string", // ISO 8601 datetime\n    "to": "string", // ISO 8601 datetime\n    "billingCycle": "string" // monthly, yearly\n  },\n  "summary": {\n    "totalCharges": number, // Total amount in cents\n    "paidCharges": number,\n    "pendingCharges": number,\n    "credits": number,\n    "balance": number,\n    "currency": "string"\n  },\n  "byAPI": [\n    {\n      "apiId": "string",\n      "name": "string",\n      "plan": "string",\n      "usage": {\n        "included": number,\n        "actual": number,\n        "overage": number\n      },\n      "charges": {\n        "base": number,\n        "overage": number,\n        "total": number\n      }\n    }\n  ],\n  "nextBilling": {\n    "date": "string", // ISO 8601 datetime\n    "estimatedCharges": number\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"get-invoice-list",children:"Get Invoice List"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /v1/analytics/billing/invoices\n"})}),"\n",(0,r.jsx)(n.h4,{id:"query-parameters-1",children:"Query Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"status: string     // Filter by status (paid, pending, overdue)\nlimit: number      // Number of invoices (default: 10)\noffset: number     // Pagination offset\n"})}),"\n",(0,r.jsx)(n.h4,{id:"success-response-200-ok-1",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "invoices": [\n    {\n      "id": "string",\n      "number": "string",\n      "status": "string",\n      "issuedAt": "string", // ISO 8601 datetime\n      "dueAt": "string", // ISO 8601 datetime\n      "paidAt": "string", // ISO 8601 datetime if paid\n      "amount": number,\n      "currency": "string",\n      "lineItems": [\n        {\n          "description": "string",\n          "quantity": number,\n          "unitPrice": number,\n          "amount": number\n        }\n      ],\n      "downloadUrl": "string" // URL to PDF invoice\n    }\n  ],\n  "pagination": {\n    "total": number,\n    "limit": number,\n    "offset": number\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h3,{id:"get-usage-charges",children:"Get Usage Charges"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"GET /v1/analytics/billing/charges\n"})}),"\n",(0,r.jsx)(n.h4,{id:"query-parameters-2",children:"Query Parameters"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apiId: string      // Filter by API (optional)\ntype: string       // Type of charges (all, overage, subscription)\nperiod: string     // Billing period\n"})}),"\n",(0,r.jsx)(n.h4,{id:"success-response-200-ok-2",children:"Success Response (200 OK)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",children:'{\n  "status": "success",\n  "charges": {\n    "subscription": [\n      {\n        "apiId": "string",\n        "planId": "string",\n        "date": "string", // ISO 8601 datetime\n        "amount": number,\n        "status": "string", // charged, pending, waived\n        "details": {\n          "billingPeriod": "string",\n          "planName": "string",\n          "features": ["string"]\n        }\n      }\n    ],\n    "overage": [\n      {\n        "apiId": "string",\n        "date": "string", // ISO 8601 datetime\n        "usage": {\n          "included": number,\n          "actual": number,\n          "excess": number\n        },\n        "rate": number, // Per unit charge\n        "amount": number,\n        "status": "string" // charged, pending, waived\n      }\n    ]\n  },\n  "summary": {\n    "totalSubscription": number,\n    "totalOverage": number,\n    "totalCharges": number\n  }\n}\n'})}),"\n",(0,r.jsx)(n.h2,{id:"notes",children:"Notes"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"All monetary amounts are in indian rupees."}),"\n",(0,r.jsx)(n.li,{children:"Supported currencies defined in user preferences"}),"\n",(0,r.jsx)(n.li,{children:"Invoices are generated monthly"}),"\n",(0,r.jsx)(n.li,{children:"Payment terms are net 30 days"}),"\n",(0,r.jsx)(n.li,{children:"Usage charges are calculated daily"}),"\n",(0,r.jsx)(n.li,{children:"Overage charges appear on next invoice"}),"\n",(0,r.jsx)(n.li,{children:"Auto-payment available for verified accounts"}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},54942:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>l});var s=i(36672);const r={},t=s.createContext(r);function a(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);